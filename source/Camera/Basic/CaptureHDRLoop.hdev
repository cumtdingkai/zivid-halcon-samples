<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="19.05.0.0">
<procedure name="main">
<interface/>
<body>
<c>* </c>
<c>* Example for the usage of a Zivid 3D camera in HALCON</c>
<c>* </c>
<c>* This example shows how to acquire HDR images from the camera</c>
<c>* in a loop (while actively changing some HDR settings). Each</c>
<c>* HDR image is used to generate a HALCON ObjectModel3D</c>
<c>* which is then visualized.</c>
<c>* </c>
<c>* Please note that you first need to install Zivid Software and</c>
<c>* correctly set the environment variables. After this, you can</c>
<c>* access the camera with the HALCON GenICamTL interface.</c>
<c>* </c>
<c></c>
<c>* Preparing the graphics window</c>
<l>dev_close_window ()</l>
<l>WinWidth := 960</l>
<l>WinHeight := 800</l>
<l>dev_open_window (0, 0, WinWidth, WinHeight, 'blue', Window3D)</l>
<c></c>
<c>*Get first available Zivid device</c>
<l>info_framegrabber ('GenICamTL','info_boards', Information, ValueList)</l>
<l>import './../../Procedures'</l>
<l>get_first_available_zivid_device (ValueList, Device)</l>
<c></c>
<c>* Connecting to the Zivid camera</c>
<l>open_framegrabber ('GenICamTL',1, 1, 0, 0, 0, 0, 'progressive', -1, 'default', -1, 'false', 'default', Device, 0, 0, AcqHandle)</l>
<c></c>
<c>* Configuring 3D-settings</c>
<l>set_framegrabber_param (AcqHandle, 'create_objectmodel3d', 'enable')</l>
<l>set_framegrabber_param (AcqHandle, 'add_objectmodel3d_overlay_attrib', 'enable')</l>
<c></c>
<c>* Seting the timeout for aborting a pending grab to infinity; useful for longer exposure times</c>
<l>set_framegrabber_param (AcqHandle, 'grab_timeout', -1)</l>
<c></c>
<c>* Switching to the HDR mode</c>
<l>set_framegrabber_param (AcqHandle, 'AcquisitionMode', 'MergedMultiFrame')</l>
<l>set_framegrabber_param (AcqHandle, 'MergedMultiFrameMode','HDR')</l>
<c></c>
<l>for Index := 0 to 2 by 1</l>
<c>    </c>
<c>    * Resetting any previous HDR settings</c>
<l>    set_framegrabber_param (AcqHandle, 'MergedMultiFrameReset', 1)</l>
<c>    </c>
<c>    * Configuring HDR settings for frames</c>
<l>    for Frame := 1 to 3 by 1</l>
<l>        set_hdr_frame (AcqHandle, 'settings/set'+(Index+1)+'_json/frame_0'+Frame+'.json')</l>
<l>    endfor</l>
<c></c>
<c>    * Grabbing the HDR image</c>
<l>    grab_data (Image, Region, Contours, AcqHandle, ObjectModel3D)</l>
<c>    </c>
<c>    * Displaying the 3D color point cloud, press the button to continue</c>
<l>    Instructions[0] := 'Rotate: Left button'</l>
<l>    Instructions[1] := 'Zoom:   Shift + left button'</l>
<l>    Instructions[2] := 'Move:   Ctrl  + left button'</l>
<l>    visualize_object_model_3d (Window3D, ObjectModel3D, [], [], ['red_channel_attrib','green_channel_attrib','blue_channel_attrib'], ['&amp;overlay_red','&amp;overlay_green','&amp;overlay_blue'], [], [], [Instructions], PoseOut)</l>
<c></c>
<l>endfor</l>
<c></c>
<c>* Disconnecting from the Zivid Camera</c>
<l>close_framegrabber (AcqHandle)</l>
<c></c>
<c>* Closing the graphics window</c>
<l>dev_close_window ()</l>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
<procedure name="set_hdr_frame">
<interface>
<ic>
<par name="AcqHandle" base_type="ctrl" dimension="0"/>
<par name="path" base_type="ctrl" dimension="0"/>
</ic>
</interface>
<body>
<c>    </c>
<l>    read_dict(path, [], [], json_dict)</l>
<c>    </c>
<l>    get_dict_param(json_dict, 'keys', [], AllKeys)</l>
<l>    get_dict_tuple(json_dict, 'Settings', settings)</l>
<c>    </c>
<l>    get_dict_tuple(settings, 'ExposureTime', exposure_time)</l>
<l>    set_framegrabber_param (AcqHandle, 'MergedMultiFrameExposureTime', exposure_time)</l>
<c>    </c>
<l>    get_dict_tuple(settings, 'Iris', iris)</l>
<l>    set_framegrabber_param (AcqHandle, 'MergedMultiFrameIris', iris)</l>
<c>    </c>
<l>    get_dict_tuple(settings, 'Brightness', brightness)</l>
<l>    set_framegrabber_param (AcqHandle, 'MergedMultiFrameBrightness', brightness)</l>
<c>    </c>
<l>    get_dict_tuple(settings, 'Gain', gain)</l>
<l>    set_framegrabber_param (AcqHandle, 'MergedMultiFrameGain', gain)</l>
<c>    </c>
<l>    get_dict_tuple(settings, 'Bidirectional', bidirectional)</l>
<l>    set_framegrabber_param (AcqHandle, 'MergedMultiFrameBidirectional', bidirectional)</l>
<c>    </c>
<l>    get_dict_tuple(settings, 'Filters', filters)</l>
<c>    </c>
<l>    get_dict_tuple(filters, 'Contrast', contrast)</l>
<l>    get_dict_tuple(contrast, 'Enabled', enabled)</l>
<l>    set_framegrabber_param (AcqHandle, 'MergedMultiFrameContrastFilterEnabled', enabled)</l>
<l>    get_dict_tuple(contrast, 'Threshold', threshold)</l>
<l>    set_framegrabber_param (AcqHandle, 'MergedMultiFrameContrastFilterThreshold', threshold)</l>
<c>    </c>
<l>    get_dict_tuple(filters, 'Gaussian', gaussian)</l>
<l>    get_dict_tuple(gaussian, 'Enabled', enabled)</l>
<l>    set_framegrabber_param (AcqHandle, 'MergedMultiFrameGaussianFilterEnabled', enabled)</l>
<l>    get_dict_tuple(gaussian, 'Sigma', sigma)</l>
<l>    set_framegrabber_param (AcqHandle, 'MergedMultiFrameGaussianFilterSigma', sigma)</l>
<c>    </c>
<l>    get_dict_tuple(filters, 'Outlier', outlier)</l>
<l>    get_dict_tuple(outlier, 'Enabled', enabled)</l>
<l>    set_framegrabber_param (AcqHandle, 'MergedMultiFrameOutlierFilterEnabled', enabled)</l>
<l>    get_dict_tuple(outlier, 'Threshold', threshold)</l>
<l>    set_framegrabber_param (AcqHandle, 'MergedMultiFrameOutlierFilterThreshold', threshold)</l>
<c>    </c>
<l>    get_dict_tuple(filters, 'Reflection', reflection)</l>
<l>    get_dict_tuple(reflection, 'Enabled', enabled)</l>
<l>    set_framegrabber_param (AcqHandle, 'MergedMultiFrameReflectionFilterEnabled', enabled)</l>
<c>    </c>
<l>    get_dict_tuple(filters, 'Saturated', saturated)</l>
<l>    get_dict_tuple(saturated, 'Enabled', enabled)</l>
<l>    set_framegrabber_param (AcqHandle, 'MergedMultiFrameSaturatedFilterEnabled', enabled)</l>
<c>    </c>
<l>    set_framegrabber_param (AcqHandle, 'MergedMultiFrameBalanceRatioSelector','Blue')</l>
<l>    set_framegrabber_param (AcqHandle, 'MergedMultiFrameBalanceRatio', 1.081)</l>
<l>    set_framegrabber_param (AcqHandle, 'MergedMultiFrameBalanceRatioSelector','Red')</l>
<l>    set_framegrabber_param (AcqHandle, 'MergedMultiFrameBalanceRatio', 1.709)</l>
<c></c>
<l>    set_framegrabber_param (AcqHandle, 'MergedMultiFrameAdd','1')</l>
<c>    </c>
<l>return ()</l>
</body>
<docu id="set_hdr_frame">
<parameters>
<parameter id="AcqHandle"/>
<parameter id="path"/>
</parameters>
</docu>
</procedure>
</hdevelop>
